diff -Naur rust-skia/skia-bindings/build_support/skia/config.rs modified/skia-bindings/build_support/skia/config.rs
--- rust-skia/skia-bindings/build_support/skia/config.rs 2021-10-23 14:03:08.000000000 -0400
+++ modified/skia-bindings/build_support/skia/config.rs  2021-10-23 14:15:09.000000000 -0400
@@ -83,6 +83,7 @@
                 ("skia_use_system_zlib", yes_if(use_system_libraries)),
                 ("skia_use_xps", no()),
                 ("skia_use_dng_sdk", yes_if(features.dng)),
+                ("skia_use_system_freetype2", no()),
                 ("cc", quote(&build.cc)),
                 ("cxx", quote(&build.cxx)),
             ];
@@ -139,7 +140,10 @@
             let mut set_target = true;
             let sysroot_arg;
             let opt_level_arg;
-            let mut cflags: Vec<&str> = vec![];
+            let mut cflags: Vec<&str> = vec![
+                "-I/usr/include/c++/11.2.1",
+                "-I/usr/include/c++/11.2.1/x86_64-alpine-linux-musl"
+            ];
             let mut asmflags: Vec<&str> = vec![];
 
             if let Some(sysroot) = cargo::env_var("SDKROOT") {
@@ -381,8 +383,8 @@
 /// contains a fully configured Skia source tree generated by gn.
 pub fn build_skia(config: &binaries_config::BinariesConfiguration, ninja_command: &Path) {
     let ninja_status = Command::new(ninja_command)
-        .args(&config.ninja_built_libraries)
         .args(&["-C", config.output_directory.to_str().unwrap()])
+        .args(&config.ninja_built_libraries)
         .stdout(Stdio::inherit())
         .stderr(Stdio::inherit())
         .status();
diff -Naur rust-skia/skia-bindings/build_support/skia_bindgen.rs modified/skia-bindings/build_support/skia_bindgen.rs
--- rust-skia/skia-bindings/build_support/skia_bindgen.rs 2021-10-23 14:03:08.000000000 -0400
+++ modified/skia-bindings/build_support/skia_bindgen.rs  2021-10-23 14:15:07.000000000 -0400
@@ -170,6 +170,8 @@
 
     builder = builder.clang_arg(format!("-I{}", include_path.display()));
     cc_build.include(include_path);
+    cc_build.include("/usr/include/c++/11.2.1");
+    cc_build.include("/usr/include/c++/11.2.1/x86_64-alpine-linux-musl");
 
     // Whether GIF decoding is supported,
     // is decided by BUILD.gn based on the existence of the libgifcodec directory:
