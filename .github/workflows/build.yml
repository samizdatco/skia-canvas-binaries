name: Compile binaries
on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:

  # linux-arm64:
  #   runs-on: [self-hosted, linux, ARM64]
  #   container:
  #     image: ghcr.io/samizdatco/skia-canvas-arm64-env:v1
  #     credentials:
  #       username: ${{ github.actor }}
  #       password: ${{ secrets.CR_PAT }}

  #   steps:
  #   - name: Use Node.js
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: 14

  #   - name: Checkout repository
  #     uses: actions/checkout@v2
  #     with:
  #       path: skia-canvas

  #   - name: Determine current upstream version
  #     id: rust-skia
  #     run: |
  #       export TAG=$(awk '/skia-safe/{getline; print}' skia-canvas/Cargo.toml | egrep -o '[0-9\.]+')
  #       echo "::set-output name=VERSION::$TAG"

  #   - name: Checkout rust-skia
  #     uses: actions/checkout@v2
  #     with:
  #       repository: rust-skia/rust-skia
  #       ref: ${{ steps.rust-skia.outputs.VERSION }}
  #       submodules: true
  #       path: rust-skia

  #   - name: Patch sources
  #     run: |
  #       perl -0777 -pi.bak -e 's/(\[dependencies.skia-safe\]\n)version.*/$1path = "..\/rust-skia\/skia-safe"/m' skia-canvas/Cargo.toml

  #   - name: Build module
  #     run: |
  #       cd skia-canvas
  #       npm ci --ignore-scripts
  #       npm run build -- --release

  #   - name: Package module
  #     run: |
  #       cd skia-canvas
  #       npm test && npm run package

  #   - name: Upload to S3
  #     env:
  #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #     run: |
  #       cd skia-canvas
  #       npm run upload



  linux-arm:
    runs-on: [self-hosted, linux, ARM]
    container:
      image: ghcr.io/samizdatco/skia-canvas-arm-env:v1
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.CR_PAT }}

    steps:
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 14

    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        path: skia-canvas

    - name: Determine current upstream version
      id: rust-skia
      run: |
        export TAG=$(awk '/skia-safe/{getline; print}' skia-canvas/Cargo.toml | egrep -o '[0-9\.]+')
        echo "::set-output name=VERSION::$TAG"

    - name: Checkout rust-skia
      uses: actions/checkout@v2
      with:
        repository: rust-skia/rust-skia
        ref: ${{ steps.rust-skia.outputs.VERSION }}
        submodules: true
        path: rust-skia

    - name: Patch sources
      run: |
        echo "#!/bin/true" > rust-skia/skia-bindings/skia/bin/fetch-gn
        perl -0777 -pi.bak -e 's/(\[dependencies.skia-safe\]\n)version.*/$1path = "..\/rust-skia\/skia-safe"/m' skia-canvas/Cargo.toml

    - name: Build module
      run: |
        cd skia-canvas
        npm ci --ignore-scripts
        npm run build -- --release

    - name: Package module
      run: |
        cd skia-canvas
        npm test && npm run package

    - name: Upload to S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        cd skia-canvas
        npm run upload









  # linux-x86:
  #   runs-on: ubuntu-latest
  #   container:
  #     image: ghcr.io/samizdatco/skia-canvas-x86-env:v1
  #     credentials:
  #       username: ${{ github.actor }}
  #       password: ${{ secrets.CR_PAT }}

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v2
  #     with:
  #       path: skia-canvas

  #   - name: Install rust
  #     run: |
  #       curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
  #       echo "$HOME/.cargo/bin" >> $GITHUB_PATH

  #   - name: Checkout rust-skia
  #     id: rust-skia
  #     run: |
  #       export TAG=$(awk '/skia-safe/{getline; print}' skia-canvas/Cargo.toml | egrep -o '[0-9\.]+')
  #       git clone --depth 1 --branch $TAG https://github.com/rust-skia/rust-skia.git
  #       cd rust-skia
  #       git submodule update --init --depth 1 skia-bindings/skia
  #       git submodule update --init --depth 1 skia-bindings/depot_tools

  #   - name: Patch build files
  #     run: |
  #       perl -0777 -pi.bak -e 's/(\[dependencies.skia-safe\]\n)version.*/$1path = "..\/rust-skia\/skia-safe"/m' skia-canvas/Cargo.toml
  #       perl -pi.bak -e 's/(let mut args: Vec<\(&str, String\)> = vec!\[)/$1("skia_use_system_freetype2", no()),/' rust-skia/skia-bindings/build_support/skia/config.rs

  #   - name: Build module
  #     run: |
  #       cd skia-canvas
  #       npm ci --ignore-scripts
  #       npm run build -- --release

  #   - name: Package module
  #     run: |
  #       cd skia-canvas
  #       npm test && npm run package

  #   - name: Upload to S3
  #     env:
  #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #     run: |
  #       cd skia-canvas
  #       npm run upload



  # windows-x86:
  #   runs-on: windows-latest

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v2

  #   - name: Use Node.js
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: 16

  #   - name: Use Rust
  #     uses: actions-rs/toolchain@v1.0.6
  #     with:
  #       toolchain: stable

  #   - name: Build module
  #     run: |
  #       npm ci --ignore-scripts
  #       npm run build -- --release
  #   #    npm run build

  #   - name: Package module
  #     run: |
  #       npm test && npm run package

  #   - name: Upload to S3
  #     env:
  #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #     run: |
  #       npm run upload

