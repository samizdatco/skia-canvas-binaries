name: Compile binaries
on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  # linux-x64:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       # libc: [glibc, musl]
  #       libc: [glibc]

  #   container:
  #     image: ${{ format('ghcr.io/{0}-{1}:latest', github.repository, matrix.libc) }}
  #     options: --user github

  #   steps:
  #   # - name: Use Rust
  #   #   uses: dtolnay/rust-toolchain@stable
  #   #   with:
  #   #     toolchain: stable

  #   # - name: Checkout skia-canvas
  #   #   uses: actions/checkout@v4

  #   # - name: Build module
  #   #   run: |
  #   #     mkdir -p $CARGO_HOME/registry
  #   #     chown -R github $CARGO_HOME/registry
  #   #     make optimized
  #   #     npm test
  #   - name: Install rust
  #     run: |
  #       curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal
  #       echo "$HOME/.cargo/bin" >> $GITHUB_PATH
  #       echo CARGO_TERM_COLOR=always >> $GITHUB_ENV

  #   - name: Checkout skia-canvas
  #     env:
  #       SERVER: ${{ github.server_url }}
  #       REPO: ${{ github.repository }}
  #       REF: ${{ github.ref_name }}
  #     run: |
  #       git clone --depth 1 --branch $REF ${SERVER}/${REPO} skia-canvas

  #   - name: Checkout rust-skia and apply static deps patch
  #     run: |
  #       export TAG=$(make -sC skia-canvas skia-version)
  #       git clone --depth 1 --branch $TAG --recurse-submodules -j8 https://github.com/rust-skia/rust-skia.git
  #       patch -d rust-skia -p1 < ./skia-canvas/arch/glibc/static-deps.patch
  #       perl -pi.bak -e 's/"skia-safe\/embed-freetype"\, //' skia-canvas/Cargo.toml
  #       make -sC skia-canvas with-local-skia

  #   - name: Build module
  #     run: |
  #       cd skia-canvas && make optimized && npm test && ldd lib/skia.node

  linux:
    strategy:
      fail-fast: false
      matrix:
        arch: [x64, arm64]
        # libc: [glibc, musl]
        libc: [glibc]
    container:
      image: ${{ format('ghcr.io/{0}-{1}:latest', github.repository, matrix.libc) }}
      options: --user github
    runs-on: ${{ matrix.arch == 'x64' && 'ubuntu-latest' || 'ubuntu-24.04-arm' }}

    steps:
    - name: Prepare workspace
      run: |
        rm -rf "$GITHUB_WORKSPACE"
        mkdir -p "$GITHUB_WORKSPACE"

    - name: Install rust
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        echo CARGO_TERM_COLOR=always >> $GITHUB_ENV

    - name: Checkout skia-canvas
      env:
        SERVER: ${{ github.server_url }}
        REPO: ${{ github.repository }}
        REF: ${{ github.ref_name }}
      run: |
        git clone --depth 1 --branch $REF ${SERVER}/${REPO} skia-canvas

    - name: Checkout rust-skia and apply static deps patch
      run: |
        export TAG=$(make -sC skia-canvas skia-version)
        git clone --depth 1 --branch $TAG --recurse-submodules -j8 https://github.com/rust-skia/rust-skia.git
        patch -d rust-skia -p1 < ./skia-canvas/arch/glibc/static-deps.patch
        perl -pi.bak -e 's/"skia-safe\/embed-freetype"\, //' skia-canvas/Cargo.toml
        make -sC skia-canvas with-local-skia

    - name: Build module
      run: |
        cd skia-canvas && make optimized && npm test && ldd lib/skia.node
