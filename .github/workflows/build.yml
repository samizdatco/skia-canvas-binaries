name: Compile binaries
on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  # linux-x64:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       # libc: [glibc, musl]
  #       libc: [glibc]

  #   container:
  #     image: ${{ format('ghcr.io/{0}-{1}:latest', github.repository, matrix.libc) }}
  #     options: --user github

  #   steps:
  #   # - name: Use Rust
  #   #   uses: dtolnay/rust-toolchain@stable
  #   #   with:
  #   #     toolchain: stable

  #   # - name: Checkout skia-canvas
  #   #   uses: actions/checkout@v4

  #   # - name: Build module
  #   #   run: |
  #   #     mkdir -p $CARGO_HOME/registry
  #   #     chown -R github $CARGO_HOME/registry
  #   #     make optimized
  #   #     npm test
  #   - name: Install rust
  #     run: |
  #       curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal
  #       echo "$HOME/.cargo/bin" >> $GITHUB_PATH
  #       echo CARGO_TERM_COLOR=always >> $GITHUB_ENV

  #   - name: Checkout skia-canvas
  #     env:
  #       SERVER: ${{ github.server_url }}
  #       REPO: ${{ github.repository }}
  #       REF: ${{ github.ref_name }}
  #     run: |
  #       git clone --depth 1 --branch $REF ${SERVER}/${REPO} skia-canvas

  #   - name: Checkout rust-skia and apply static deps patch
  #     run: |
  #       export TAG=$(make -sC skia-canvas skia-version)
  #       git clone --depth 1 --branch $TAG --recurse-submodules -j8 https://github.com/rust-skia/rust-skia.git
  #       patch -d rust-skia -p1 < ./skia-canvas/arch/glibc/static-deps.patch
  #       perl -pi.bak -e 's/"skia-safe\/embed-freetype"\, //' skia-canvas/Cargo.toml
  #       make -sC skia-canvas with-local-skia

  #   - name: Build module
  #     run: |
  #       cd skia-canvas && make optimized && npm test && ldd lib/skia.node

  linux:
    strategy:
      fail-fast: false
      matrix:
        arch: [arm64, x64]
        libc: [glibc, musl]
    runs-on: ${{ matrix.arch == 'x64' && 'ubuntu-latest' || 'ubuntu-24.04-arm' }}
    container:
      image: ${{ format('ghcr.io/{0}-{1}:latest', github.repository, matrix.libc) }}

    steps:
    - name: Install rust
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        echo CARGO_TERM_COLOR=always >> $GITHUB_ENV

    - name: Checkout skia-canvas
      run: |
        git clone --depth 1 --branch $GITHUB_REF_NAME ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY} skia-canvas

    # - name: Checkout rust-skia and apply static deps patch
    #   run: |
    #     export TAG=$(make -sC skia-canvas skia-version)
    #     git clone --depth 1 --branch $TAG --recurse-submodules -j8 https://github.com/rust-skia/rust-skia.git
    #     patch -d rust-skia -p1 -F10 < ./skia-canvas/containers/use-static-fontconfig.patch

    - name: Build module
      run: |
        touch skia-canvas/lib/skia.node
#        make -sC skia-canvas with-local-skia
#        cd skia-canvas && make optimized && npm test && ldd lib/skia.node

    - name: Build AWS layer
      if: ${{ matrix.libc == 'glibc' }}
      env:
        SRC_DIR: $GITHUB_WORKSPACE/skia-canvas
        LAYER_DIR: $GITHUB_WORKSPACE/layer
        LAYER_ZIP: $GITHUB_WORKSPACE/aws-lambda-${{ matrix.arch }}.zip
      run: |
        pwd
        export SRC_DIST="$SRC_DIR/$(cd $SRC_DIR; npm pack)"
        echo $SRC_DIST
        ls -l
        mkdir -p $LAYER_DIR/node
        cd $LAYER_DIR/node
        npm install --ignore-scripts $SRC_DIST
        cp $SRC_DIR/lib/skia.node node_modules/skia-canvas/lib
        cd $LAYER_DIR && zip -r9 $LAYER_ZIP node/node_modules
        unzip -l $LAYER_ZIP
