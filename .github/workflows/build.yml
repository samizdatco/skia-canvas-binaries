name: Compile binaries
on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:

  linux-x86:
    runs-on: ubuntu-latest
    container: node:lts-stretch

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        path: skia-canvas

    - name: Install rust
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        cargo install toml-cli
        echo SKIA_VERSION=$(toml get skia-canvas/Cargo.toml dependencies.skia-safe.version) >> $GITHUB_ENV

    - name: Install system dependencies
      run: |
        add-apt-repository "deb http://deb.debian.org/debian stretch-backports main"
        apt-get update
        apt-get install -y \
          build-essential lsb-release wget python2.7  \
          libssl-dev libfontconfig-dev git less \
          clang-5.0 lld-5.0
        ln -s /usr/bin/clang++-5.0   /usr/bin/clang++
        ln -s /usr/bin/clang-5.0     /usr/bin/clang
        ln -s /usr/bin/clang-cpp-5.0 /usr/bin/clang-cpp
        ln -s /usr/bin/ld.lld-5.0    /usr/bin/ld.lld
        ln -s /usr/bin/lld-5.0       /usr/bin/lld

    - name: Checkout rust-skia
      uses: actions/checkout@v2
      with:
        repository: rust-skia/rust-skia
        path: rust-skia
        ref: $SKIA_VERSION

    - name: Fetch rust-skia submodules
      run: |
        cd rust-skia
        git submodule update --init --depth 1 skia-bindings/skia
        git submodule update --init --depth 1 skia-bindings/depot_tools

    - name: Patch build files
      run: |
        perl -0777 -pi.bak -e 's/(\[dependencies.skia-safe\]\n)version.*/$1path = "..\/rust-skia\/skia-safe"/m' skia-canvas/Cargo.toml
        perl -pi.bak -e 's/(let mut args: Vec<\(&str, String\)> = vec!\[)/$1\n("skia_use_freetype2", yes()),\n("skia_use_system_freetype2", no()),\n/' rust-skia/skia-bindings/build_support/skia/config.rs


    - name: Build module
      run: |
        cd skia-canvas
        npm ci --ignore-scripts
        npm run build -- --release

    - name: Package module
      run: |
        cd skia-canvas
        npm test
        npm run package

    # - name: Upload to S3
    #   env:
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #   run: |
    #     npm run upload


  # mac-x86:
  #   runs-on: macos-latest

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v2

  #   - name: Use Node.js
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: 16

  #   - name: Use Rust
  #     uses: actions-rs/toolchain@v1.0.6
  #     with:
  #       toolchain: stable

  #   - name: Build module
  #     env:
  #       MACOSX_DEPLOYMENT_TARGET: 10.13
  #     run: |
  #       npm ci --ignore-scripts
  #       npm run build -- --release

  #   - name: Package module
  #     run: |
  #       npm test
  #       npm run package

  #   - name: Upload to S3
  #     env:
  #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #     run: |
  #       npm run upload


  # mac-arm64:
  #   runs-on: macos-latest

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v2

  #   - name: Use Node.js
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: 16

  #   - name: Use Rust
  #     uses: actions-rs/toolchain@v1.0.6
  #     with:
  #       target: aarch64-apple-darwin
  #       toolchain: nightly
  #       override: true

  #   - name: Select SDK
  #     run: |
  #       SDK=$(xcodebuild -showsdks -json | jq -r '.[] | .canonicalName' | grep '^macosx' | tail -n 1)
  #       echo "SDKROOT=$(xcrun -sdk $SDK --show-sdk-path)" >> $GITHUB_ENV

  #   - name: Build & package module
  #     env:
  #       MACOSX_DEPLOYMENT_TARGET: 11.1
  #     run: |
  #       npm ci --ignore-scripts
  #       npm run build -- --release --target aarch64-apple-darwin
  #       sed -i.bak 's/"package_name":.*/"package_name": "{platform}-arm64-{node_napi_label}.tar.gz",/' package.json
  #       npm run package

  #   - name: Upload to S3
  #     env:
  #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #     run: |
  #       npm run upload


  # windows-x86:
  #   runs-on: windows-latest

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v2

  #   - name: Use Node.js
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: 16

  #   - name: Use Rust
  #     uses: actions-rs/toolchain@v1.0.6
  #     with:
  #       toolchain: stable

  #   - name: Build module
  #     run: |
  #       npm ci --ignore-scripts
  #       npm run build -- --release

  #   # # needed until https://github.com/rust-skia/rust-skia/pull/486 is merged...
  #   # - name: Bundle ICU data (windows only)
  #   #   shell: bash
  #   #   run: |
  #   #     ICU=$(find . -name icudtl.dat | grep skia-bindings | head -n 1)
  #   #     cp $ICU lib/v6

  #   - name: Package module
  #     run: |
  #       npm test
  #       npm run package

  #   - name: Upload to S3
  #     env:
  #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #     run: |
  #       npm run upload
