name: Release binaries
on:
  workflow_dispatch:
  push:
    tags:
      - "v*"


# node-pre-gyp package 2>&1 | grep 'info package' | cut -d "\"" -f 2

jobs:

  linux-x86:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        libc: [glibc, musl]
    container:
      image: ${{ format('ghcr.io/{0}-{1}:latest', github.repository, matrix.libc) }}

    steps:
    - name: Checkout skia-canvas
      uses: actions/checkout@v2
      with:
        path: skia-canvas

    - name: Check for gh
      id: release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        export RELEASE="v$(jq -r '.version' package.json)"
        gh release upload $RELEASE README.md



    # - name: Install rust
    #   run: |
    #     curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal
    #     echo "$HOME/.cargo/bin" >> $GITHUB_PATH


    # - name: Determine current upstream version
    #   id: rust-skia
    #   run: |
    #     export TAG=$(awk '/\[dependencies.skia-safe\]/{getline; print}' skia-canvas/Cargo.toml | egrep -o '[0-9\.]+')
    #     echo "::set-output name=VERSION::$TAG"

    # - name: Checkout rust-skia
    #   if: ${{ matrix.libc == 'musl' }}
    #   uses: actions/checkout@v2
    #   with:
    #     repository: rust-skia/rust-skia
    #     ref: ${{ steps.rust-skia.outputs.VERSION }}
    #     submodules: true
    #     path: rust-skia

    # - name: Patch build files
    #   if: ${{ matrix.libc == 'musl' }}
    #   run: |
    #     patch -p0 < /code/alpine-build.patch
    #     perl -0777 -pi.bak -e 's/(\[dependencies.skia-safe\]\n)version.*/$1path = "..\/rust-skia\/skia-safe"/m' skia-canvas/Cargo.toml

    # - name: Build module
    #   run: |
    #     cd skia-canvas
    #     npm ci --ignore-scripts
    #     npm run build -- --release --features skia-safe/embed-freetype

    # - name: Package module
    #   run: |
    #     cd skia-canvas
    #     npm test && npm run package

    # - name: Upload to S3
    #   env:
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #   run: |
    #     cd skia-canvas
    #     npm run upload


