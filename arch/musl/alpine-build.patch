diff -Naur -x target -x Cargo.lock rust-skia/skia-bindings/build_support/skia/config.rs modified/skia-bindings/build_support/skia/config.rs
--- rust-skia/skia-bindings/build_support/skia/config.rs    2022-06-03 12:39:48.306141844 -0400
+++ modified/skia-bindings/build_support/skia/config.rs     2022-06-03 12:44:18.111334942 -0400
@@ -84,6 +84,7 @@
                 ("skia_use_system_zlib", yes_if(use_system_libraries)),
                 ("skia_use_xps", no()),
                 ("skia_use_dng_sdk", yes_if(features.dng)),
+                ("skia_use_system_freetype2", no()),
                 ("cc", quote(&build.cc)),
                 ("cxx", quote(&build.cxx)),
             ];
@@ -142,7 +143,10 @@
             let target = cargo::target();
             let mut target_str = format!("--target={}", target);
             let mut set_target = true;
-            let mut cflags: Vec<String> = Vec::new();
+            let mut cflags: Vec<String> = vec![
+                "-I/usr/include/c++/10.3.1".to_string(),
+                "-I/usr/include/c++/10.3.1/x86_64-alpine-linux-musl".to_string()
+            ];
             let mut asmflags: Vec<String> = Vec::new();
 
             if let Some(sysroot) = cargo::env_var("SDKROOT") {
@@ -409,8 +413,8 @@
 /// contains a fully configured Skia source tree generated by gn.
 pub fn build_skia(config: &binaries_config::BinariesConfiguration, ninja_command: &Path) {
     let ninja_status = Command::new(ninja_command)
-        .args(&config.ninja_built_libraries)
         .args(&["-C", config.output_directory.to_str().unwrap()])
+        .args(&config.ninja_built_libraries)
         .stdout(Stdio::inherit())
         .stderr(Stdio::inherit())
         .status();
diff -Naur -x target -x Cargo.lock rust-skia/skia-bindings/build_support/skia_bindgen.rs modified/skia-bindings/build_support/skia_bindgen.rs
--- rust-skia/skia-bindings/build_support/skia_bindgen.rs   2022-06-03 12:39:48.306540689 -0400
+++ modified/skia-bindings/build_support/skia_bindgen.rs    2022-06-03 12:44:41.448862317 -0400
@@ -170,6 +170,8 @@
 
     builder = builder.clang_arg(format!("-I{}", include_path.display()));
     cc_build.include(include_path);
+    cc_build.include("/usr/include/c++/10.3.1");
+    cc_build.include("/usr/include/c++/10.3.1/x86_64-alpine-linux-musl");
 
     // Whether GIF decoding is supported,
     // is decided by BUILD.gn based on the existence of the libgifcodec directory:
